#!/usr/bin/env python3


def solve(a, b):
    # find solution for ax + by == 1 that 0 < x < n

    if a == 0:
        return (0, 1)

    x, y = solve(b % a, a)

    x, y = y - (b // a) * x, x

    while x < 0:
        x += b
        y -= a

    return (x, y)


def inverse(a, n):
    # find x such that ax == 1 (mod n)

    x, y = solve(a, n)
    return x


def solve_crt(arr, mod):
    # find x that is equal to arr[i] modulo mod[i]

    result = 0

    product = 1
    for n in mod:
        product *= n

    for i in range(len(mod)):
        for j in range(i):
            arr[i] = (arr[i] - arr[j]) * inverse(mod[j], mod[i]) % mod[i]
            if arr[i] < 0:
                arr[i] += mod[i]

    result = 0
    product = 1

    for m, n in zip(arr, mod):
        result += m * product
        product *= n

    return result % product

# TODO: socket communication, check
